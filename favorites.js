const favDiv = document.getElementById('favorites');

// ===== –ü—Ä–µ–ª–æ–∞–¥–µ—Ä =====
window.addEventListener('load', () => {
  const p = document.getElementById('preloader');
  if (p) setTimeout(() => p.setAttribute('hidden', ''), 250); // –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
});

let currentUser = null;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuth() {
  const userData = localStorage.getItem('currentUser');
  if (!userData) {
    favDiv.innerHTML =
      "<p>‚ö†Ô∏è –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <a href='login.html'>–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</a></p>";
    return false;
  }
  currentUser = JSON.parse(userData);
  return true;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å LocalStorage
function getFavoritesFromStorage() {
  const favorites = localStorage.getItem('favorites');
  return favorites ? JSON.parse(favorites) : [];
}

function saveFavoritesToStorage(favorites) {
  localStorage.setItem('favorites', JSON.stringify(favorites));
}

function getCartFromStorage() {
  const cart = localStorage.getItem('cart');
  return cart ? JSON.parse(cart) : [];
}

function saveCartToStorage(cart) {
  localStorage.setItem('cart', JSON.stringify(cart));
}

function loadFavorites() {
  if (!checkAuth()) return;

  try {
    const allFavorites = getFavoritesFromStorage();
    const userFavorites = allFavorites.filter(
      (fav) => fav.userId === currentUser.id
    );

    favDiv.innerHTML = userFavorites.length
      ? userFavorites
          .map(
            (p) => `
      <div class="card">
        <img src="${p.image}" alt="${p.title}">
        <h3>${p.title}</h3>
        <p class="price">${p.price} BYN</p>
        <div class="actions">
          <button onclick="removeFav('${p.id}')" class="btn-danger">–£–¥–∞–ª–∏—Ç—å</button>
          <button onclick="addToCart('${p.productId}')" class="btn">üõí –í –∫–æ—Ä–∑–∏–Ω—É</button>
        </div>
      </div>
    `
          )
          .join('')
      : '<p>‚ùå –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –ø—É—Å—Ç–æ</p>';
  } catch (error) {
    favDiv.innerHTML = '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ</p>';
    console.error(error);
  }
}

function removeFav(id) {
  if (!confirm('–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ?')) return;

  try {
    const allFavorites = getFavoritesFromStorage();
    const updatedFavorites = allFavorites.filter((fav) => fav.id !== id);
    saveFavoritesToStorage(updatedFavorites);
    loadFavorites();
  } catch (error) {
    alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
    console.error(error);
  }
}

function addToCart(productId) {
  if (!currentUser) return;

  try {
    const allFavorites = getFavoritesFromStorage();
    const allCart = getCartFromStorage();

    // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
    const favItem = allFavorites.find(
      (fav) => fav.userId === currentUser.id && fav.productId === productId
    );

    if (!favItem) {
      alert('‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    const existingCartItem = allCart.find(
      (item) => item.userId === currentUser.id && item.productId === productId
    );

    if (existingCartItem) {
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      existingCartItem.quantity += 1;
      saveCartToStorage(allCart);
      alert('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ —É–≤–µ–ª–∏—á–µ–Ω–æ!');
      return;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    const cartItem = {
      id: Date.now().toString() + Math.random().toString(36).substr(2, 4), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
      userId: currentUser.id,
      productId: favItem.productId,
      title: favItem.title,
      price: favItem.price,
      image: favItem.image,
      quantity: 1,
      addedAt: new Date().toISOString(),
    };

    allCart.push(cartItem);
    saveCartToStorage(allCart);
    alert('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!');
  } catch (error) {
    alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É');
    console.error(error);
  }
}

loadFavorites();
